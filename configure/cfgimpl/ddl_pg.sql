create table configuration
(
    cfg_id             bigserial     not null,
    selectors          varchar(1000) not null,
    optional_selectors varchar(1000) not null,
    cfg_group          varchar(200)  not null,
    cfg_key            varchar(200)  not null,
    cfg_version        varchar(200)  not null,
    cfg_status         int           not null,
    raw_cfg_value      bytea         not null,
    time_created       bigint        not null,
    time_updated       bigint        not null,
    sequence           bigint        not null,
    primary key (cfg_id)
);

create unique index on configuration (selectors, optional_selectors, cfg_group, cfg_key);

create unique index on configuration (sequence asc);

comment on column configuration.cfg_status is '0-valid, 1-deleted';

comment on column configuration.sequence is 'values generated by cfg_seq on every data change to support incremental queries';

create table configuration_history
(
    cfg_history_id bigserial not null,
    cfg_id         bigint    not null,
    raw_cfg_value  bytea     not null,
    cfg_operation  int       not null,
    primary key (cfg_history_id)
);

comment on column configuration_history.cfg_operation is '0-add, 1-update, 2-delete';

create sequence cfg_seq increment by 16 minvalue 1 maxvalue 9223372036854775807 start 1 cache 1 no cycle;

-- add more tables to support selector hierarchy
-- Note1: 'sequence' field will not guarantee strict order, which means there will be event loss from data pump if the field is used for retrieving updates.
